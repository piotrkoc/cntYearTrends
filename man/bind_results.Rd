% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bind_results.R
\name{bind_results}
\alias{bind_results}
\title{Postprocessing of the simulation results}
\usage{
bind_results(files, saveFile = NULL, verbose = TRUE)
}
\arguments{
\item{files}{a character vector with names of the .RData files storing
results which should be binded}

\item{saveFile}{optionally a string with a name of the .RData file to which
results should be written}

\item{verbose}{logical value indicating whether the progress of data
processing should be indicated using a text progress bar}
}
\value{
(invisibly) a list of five data frames:
\describe{
\item{conditions}{sets of parameter values set in specific simulation
conditions}
\item{modelSummaries}{basic model summary statistics in a \emph{long} format}
\item{countryMeans}{generated country-year means (as returned by
\link{generate_data}, i.e. not standardized) and their
estimates from the models (standardized within the
group of observed country-means)}
\item{items}{item parameters (generated, not estimated)}
\item{itemDistributions}{distributions (counts) of responses to items for
each project-country-year-item}
}
Comparing to the results  returned by \link{run_simulation}: 1) a data frame
describing simulation conditions is also returned 2) specific conditions
are referenced using the \code{idConditon} variable, which is present also in the
data frame describing simulation conditions 3) specific iterations are
referenced using the \code{idIter} variable.

Moreover, if a name of file is provided using the \code{saveFile} argument,
function will write the aforementioned set of data frames into a specified
file using the .RData format. Please note that they will be writen as
separate data frame, not the list of them.
\code{idCondition}
}
\description{
Enables to bind simulation results saved in different .RData files into
one set of data frames.
}
\details{
See \link{run_iteration}
}
\examples{
\dontrun{
files <- list.files(path = ".", pattern = "\\\\.RData$",
                    recursive = TRUE, full.names = TRUE)
results <- bind_results(files)
with(results, save(list = ls(), file = "allResultds.RData"))
# or simply
gather_results(files, "allResultds.RData")
}
}
